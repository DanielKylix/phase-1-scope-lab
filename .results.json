{
  "stats": {
    "suites": 6,
    "tests": 5,
    "passes": 4,
    "pending": 0,
    "failures": 1,
    "start": "2022-08-16T08:00:45.759Z",
    "end": "2022-08-16T08:00:46.512Z",
    "duration": 753
  },
  "tests": [
    {
      "title": "returns the customerName",
      "fullTitle": "Fix the Scope declare customerName to be bob in global scope returns the customerName",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "modifies the customerName variable",
      "fullTitle": "Fix the Scope upperCaseCustomerName() modifies the customerName variable",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "setBestCustomer",
      "fullTitle": "Fix the Scope setBestCustomer() setBestCustomer",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'not bob' to equal undefined",
        "showDiff": true,
        "actual": "not bob",
        "stack": "AssertionError: expected 'not bob' to equal undefined\n    at Context.<anonymous> (test/indexTest.js:19:38)"
      }
    },
    {
      "title": "overwrites the best customer",
      "fullTitle": "Fix the Scope overwriteBestCustomer() overwrites the best customer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unsuccessfully tries to reassign the least favorite customer",
      "fullTitle": "Fix the Scope changeLeastFavoriteCustomer() unsuccessfully tries to reassign the least favorite customer",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    }
  ],
  "pending": [],
  "failures": [
    {
      "title": "setBestCustomer",
      "fullTitle": "Fix the Scope setBestCustomer() setBestCustomer",
      "duration": 2,
      "currentRetry": 0,
      "err": {
        "message": "expected 'not bob' to equal undefined",
        "showDiff": true,
        "actual": "not bob",
        "stack": "AssertionError: expected 'not bob' to equal undefined\n    at Context.<anonymous> (test/indexTest.js:19:38)"
      }
    }
  ],
  "passes": [
    {
      "title": "returns the customerName",
      "fullTitle": "Fix the Scope declare customerName to be bob in global scope returns the customerName",
      "duration": 2,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "modifies the customerName variable",
      "fullTitle": "Fix the Scope upperCaseCustomerName() modifies the customerName variable",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "overwrites the best customer",
      "fullTitle": "Fix the Scope overwriteBestCustomer() overwrites the best customer",
      "duration": 0,
      "currentRetry": 0,
      "err": {}
    },
    {
      "title": "unsuccessfully tries to reassign the least favorite customer",
      "fullTitle": "Fix the Scope changeLeastFavoriteCustomer() unsuccessfully tries to reassign the least favorite customer",
      "duration": 15,
      "currentRetry": 0,
      "err": {}
    }
  ]
}